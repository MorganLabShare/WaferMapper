function generate_xml_file(DirNameOfTempImageMatFiles)

%This script reads in a set of *.mat files generated by the WaferMapper
%during image taking and outputs an XML file readable by Fibics
OutputXMLFileName= sprintf('%s\\FibicsStageMap.xml',DirNameOfTempImageMatFiles);
MyStr = sprintf('Generating file: %s', OutputXMLFileName);
h_fig = msgbox(MyStr);

%Read in TemplateFibicsXML.xml
TemplateFibicsXMLFileName = '.\TemplateFibicsXML.xml';
txt=sprintf('Loading xml stage map %s ...',TemplateFibicsXMLFileName); disp(txt);
[tree1, rootname1, dom1]=xml_read(TemplateFibicsXMLFileName);

%Create a duplicate copy of the original xml tree
tree2 = tree1;
%remove all 'Ref' fields from this new tree
i = 1;
IsMoreRefsToRemove = true;
while IsMoreRefsToRemove
    tag = sprintf('Ref%i',i);
    if isfield(tree2,tag)
        tree2 = rmfield(tree2, tag);
        i = i + 1;
    else
        IsMoreRefsToRemove = false;
    end
    
end


i = 1;
IsMoreTempImageMatFiles = true;
while IsMoreTempImageMatFiles
    DataFileName = sprintf('%s\\HighResImage_%d.mat',DirNameOfTempImageMatFiles, i);
    if exist(DataFileName, 'file')
        MyStr = sprintf('Opening Info file: %s',DataFileName);
        disp(MyStr);
        load(DataFileName, 'Info');
        % Info =
        %
        %                   WaferName: 'Wafer006'
        %                       Label: '22'
        %                 FOV_microns: 300
        %               IsMagOverride: 0
        %                         Mag: 382
        %          ImageWidthInPixels: 300
        %         ImageHeightInPixels: 300
        %     DwellTimeInMicroseconds: 2
        %               StageX_Meters: 0.0778
        %               StageY_Meters: 0.0227
        %                     stage_z: 0.0250
        %                     stage_t: 0
        %                     stage_r: 137.0000
        %                     stage_m: 0
        %                ScanRotation: 358.1293
        %             WorkingDistance: 0.0076
        
        
        tag = sprintf('Ref%i',i);
        
        %copy the first Ref field of the template XML to the new tree
        command=sprintf('tree2.%s = tree1.Ref1;',tag); eval(command);
        
        %Update position info etc in this new ref in tree2
        command=sprintf('tree2.%s.Name=Info.Label;',tag); eval(command);
        command=sprintf('tree2.%s.Stage.Rot=Info.stage_r;',tag); eval(command);
        command=sprintf('tree2.%s.Stage.X=-1000000*Info.StageX_Meters;',tag); eval(command);
        command=sprintf('tree2.%s.Stage.Y=-1000000*Info.StageY_Meters;',tag); eval(command);
        command=sprintf('tree2.%s.Stage.Tilt=Info.stage_t;',tag); eval(command); %should always be 0
        %command=sprintf('tree2.%s.Stage.Z=25000;',tag); eval(command);
        command=sprintf('tree2.%s.Stage.Z=1000000*Info.stage_z;',tag); eval(command); %should always be 25000
        command=sprintf('tree2.%s.Beam.ScanRot=Info.ScanRotation;',tag); eval(command);
        command=sprintf('tree2.%s.Beam.WD=Info.WorkingDistance;',tag); eval(command); %KH check       
        command=sprintf('tree2.%s.Detector.B=Info.Brightness;',tag); eval(command); %KH check
        command=sprintf('tree2.%s.Detector.C=Info.Contrast;',tag); eval(command); %KH check
        command=sprintf('tree2.%s.Beam.StigX=Info.StigX;',tag); eval(command); %KH check
        command=sprintf('tree2.%s.Beam.StigY=Info.StigY;',tag); eval(command); %KH check
    
        
        %make sure to update total number of points
        command=sprintf('tree2.NumPoints = i;',tag); eval(command);
        
        
        i = i + 1;
    else 
        IsMoreTempImageMatFiles = false;
    end
    
end

% Write new XML File
txt=sprintf('Writing stage map to %s ...',OutputXMLFileName); disp(txt);
xml_write(OutputXMLFileName,tree2,rootname1);

if ishandle(h_fig)
    close(h_fig);
end
